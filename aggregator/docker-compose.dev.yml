services:
  db:
    build:
      context: .
      dockerfile: db.Dockerfile
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: devuser
      MONGO_INITDB_ROOT_PASSWORD: test123
      MONGO_INITDB_DATABASE: app
    command: [ "--replSet", "rs0", "--keyFile", "/data/replica.key" ]
    volumes:
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'localhost'}]}) }" | mongosh --port 27017 -u $$MONGO_INITDB_ROOT_USERNAME -p $$MONGO_INITDB_ROOT_PASSWORD --authenticationDatabase admin
      interval: 10s
      timeout: 30s
      start_period: 15s
      retries: 5

  aggregator:
    build:
      context: .
      dockerfile: app.Dockerfile
    command: [ "-c", "configs/docker.dev.yml" ]
    ports:
      - 3000:3000
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./configs:/app/configs
